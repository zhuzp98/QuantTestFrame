// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © rhapsodyz

//@version=5
strategy("SMI-MA Long Strategy", overlay = true, pyramiding = 0, initial_capital = 100000, commission_type = strategy.commission.percent, commission_value = 0.04, slippage = 2)

// General Numbers
_qty = (strategy.equity * 0.9) / close

// Input
// for MACD settings
fastLength      = input(12, title="Fast Length")
slowLength      = input(26, title="Slow Length")
signalLength    = input(9, title="Signal Length")

// EMA series
maFast      = ta.ema(close, fastLength)
maSlow      = ta.ema(close, slowLength)
diff        = maFast - maSlow
bullTrend   = diff >= 0
bearTrend   = diff <  0

// MACD Histogram
[macdLine, signalLine, histLine] = ta.macd(close, fastLength, slowLength, signalLength)
diffHist = histLine - histLine[1]

// Conditions
// MACD
macdOpen    = histLine < 0  and ta.crossover(histLine, ta.sma(histLine, 3))
macdClose   = histLine > 0  and ta.crossunder(histLine, ta.sma(histLine, 3))
macdCross   = ta.crossover(macdLine, signalLine)

// Input 
// for Smoothed Stochastic settings *With 5EMA of 3EMA
lengthK     = input.int(10, "%K Length",  minval = 1, maxval = 15000)
lengthD     = input.int(3,  "%D Length",  minval = 1, maxval = 4999)
lengthEMA   = input.int(8,  "EMA Length", minval = 1, maxval = 4999)
oversold    = -40
overbought  = 40

emaEma(source, length) => ta.ema(ta.ema(source, length), length)

// SMI construction
highestHigh         = ta.highest(lengthK)
lowestLow           = ta.lowest(lengthK)
highestLowestRange  = highestHigh - lowestLow
relativeRange       = close - (highestHigh + lowestLow) / 2
smi                 = 200 * (emaEma(relativeRange, lengthD) / emaEma(highestLowestRange, lengthD))
smiEMA              = ta.ema(smi, lengthEMA)
smiDiff             = smi - smiEMA

// Conditions
// Stochastic
OpenLong    = (ta.crossover(smi, smiEMA))         and  (smi < overbought)
CloseLong   = (ta.crossunder(maFast, maSlow)) or ((ta.crossunder(smi, smiEMA))  and  (smi > 10)) //or (ta.crossover(smiEMA, overbought))
OpenShort     = (ta.crossunder(smi, smiEMA))        and  (smi > overbought)
CloseShort    = (ta.crossover(maFast, maSlow))  or ((ta.crossover(smi, smiEMA))   and  (smi < oversold)) or smiDiff[1] < smiDiff //or (ta.crossunder(smiEMA, oversold))

// Risk Management
//@variable Stop-loss price for exit commands.
stopLoss   = input(3, "Stop Loss")
//@variable Take-profit price for exit commands.
takeProfit = input(30, "Take Profit")

//@variable Stop-loss price for exit commands.
var float stopLossPrice = na
//@variable Take-profit price for exit commands.
var float takeProfitPrice = na


// Execute long entry
if OpenLong
    stopLossPrice   := close * (1 - stopLoss/100)
    takeProfitPrice := close * (1 + takeProfit/100)
    strategy.entry("Long", strategy.long, qty = _qty)
    strategy.exit("exit", "Long", stop = stopLossPrice, limit = takeProfitPrice)

// Execute long exit
if CloseLong
    strategy.close("Long", qty_percent=100)

// Execute short entry
//if OpenShort
//    stopLossPrice   := close * (1 + stopLoss/100)
//    takeProfitPrice := close * (1 - takeProfit/100)
//    strategy.entry("Short", strategy.short, qty = _qty)
//    strategy.exit("Exit", "Short", stop = stopLossPrice, limit = takeProfitPrice)

// Execute short exit 
//if CloseShort
//    strategy.close("Short", qty_percent = 100)

// Plotting EMAs
fast = plot(maFast, color = #FF6D00, title="Fast MA")
slow = plot(maSlow, color = #43A047, title="Slow MA")

// Plotting SMI for visual verification
smiPlot = plot(smi, "SMI", color = color.blue)
plot(ta.ema(smi, lengthEMA), "SMI-based EMA", color = color.orange)

overboughtLine = hline(40, "Overbought Line")
oversoldLine   = hline(-40, "Oversold Line")
fill(overboughtLine, oversoldLine, color = color.new(color.blue, 90))
hline(0, "Middle Line", color = color.new(color.gray, 50))


midLinePlot = plot(0, color = na, editable = false, display = display.none)
fill(smiPlot, midLinePlot, 120,  40,   top_color = color.new(#4caf4f, 50),    bottom_color = color.new(color.green, 100), title = "Overbought Gradient Fill")
fill(smiPlot, midLinePlot, -40, -120,  top_color = color.new(color.red, 100), bottom_color = color.new(color.red, 50),    title = "Oversold Gradient Fill")